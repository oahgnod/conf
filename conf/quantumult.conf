[general]
# 配置文件avatar
profile_img_url=https://sn3302files.storage.live.com/y4mZwCZ8DEdeANSOvAqZNiYO_pPh8WSy0JZQuKniwGIoFeRjUM8LBobpGr3dHAM9qMuJgMWZmMHh7Qa4IAiOtSdJTIj93LODDCyCXtdcTog_vHt2XWnQC-eiHq0O-0jkJcFQnHJi1koZNTAn8IXYbJPN5GQ-R6U05kRbZoca9VbSIRGSi1mF20uNdrixlPPoYfd?width=1080&height=1033&cropmode=none

# resource_parser_url 示例可以在以下网站找到 https://raw.githubusercontent.com/crossutility/Quantumult-X/master/resource-parser.js
resource_parser_url=https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js

;geo_location_checker 节点页面的信息
geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js

# Quantumult 使用 HEAD 方法将 HTTP 请求发送到服务器检查 url 来测试代理的状态，结果应该是两个延迟，第一个是 TCP 与代理服务器的握手，第二个是 Quantumult 成功地从服务器检查 url 接收 HTTP 响应的总时间。闪电图标表示 TCP Fast Open 成功。如果 [server_local] 或 [server_remote] 中的服务器有自己的 server_check_url，则会用自己的 server_check_url 代替 [general] 中的 server_check_url。
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试(测试结果为通过该节点访问此网页获得 HTTP 响应所需要的时间)，来确认节点的可用性。
# Quantumult 界面中的延迟测试方式均为网页响应性测试，显示的最终延迟均为通过对应节点访问测试网页获得 HTTP 响应所需要时间。
# 由于 Trojan 协议为无响应校验协议，使得 HTTP 检测方式即使获得了 HTTP 响应，也不代表节点一定可用。
server_check_url=http://www.gstatic.com/generate_204

# DNS 排除列表
# dns_exclusion_list 包含了禁用占位符 IP (240.*) 的域，不在 dns_exclusion_list 中的域都启用了占位符 IP，并打开了 resolve-on-remote 设置。
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.icitymobile.mobi, *.pingan.com.cn, *.cmbchina.com

# Quantumult 将不会处理到 excluded_routes 的流量。修改后最好重新启动您的设备。
excluded_routes=192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8

# 在网络环境切换时出发运行模式变更
# filter - 规则分流，all_proxy - 全部代理，all_direct - 全部直连
# 示例意思：[蜂窝数据],[Wi-Fi],[SSID]
# 下列示例的意思为：在蜂窝数据使用规则分流(第一个 filter)，在 Wi-Fi 使用规则分流(第二个 filter)，在 SSID 为 LINK_22E171 的 Wi-Fi 使用全部代理，，在 SSID 为 LINK_22E172 的 Wi-Fi 使用全部直连
# Rewrite 及 Task 模块始终生效
;running_mode_trigger=filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct

# 在特定 SSID 网络时(除了 Task 模块)暂停 Quantumult X
;ssid_suspended_list=LINK_22E174, LINK_22E175

# udp_whitelist 包含目标 UDP 端口，空表示所有的端口都在 udp_whitelist 中。通过Quantumult 隧道接口发送的 UDP 数据包(通过 Quantumult 隧道接口)，目标端口不在 udp_whitelist 中的 UDP 包将被丢弃。这个设置与策略无关，也与代理(服务器)端口无关。
;udp_whitelist=53, 123, 1900, 80-443

;icmp_auto_reply=true

[dns]
# 查询结果只用于评估过滤器或通过直接策略连接，当通过服务器连接时，查询结果不会被使用，Quantumult 永远不会知道相关域名的目标 IP。
# 如果您想让某个域名(例如：example.com)为 127.0.0.0.1，只需在「filter_local」部分添加「host, example.com, reject」即可。拒绝操作将返回 127.0.0.0.1 的 DNS 响应。

# 禁用系统 DNS
# 为了提高性能，会使用从当前网络(系统)中获取的 DNS 服务器(您可以使用「no-system」禁用此功能，但至少要增加一个自定义的DNS服务器，如「server=223.5.5.5.5」)。
;no-system

# 禁用 IPv6
# 当设置「no-ipv6」时，Quanumult X Tunnel 的 DNS 模块会直接让 AAAA 查询失败。
no-ipv6

# 自定义 DNS
# > DNSPod Public DNS
server=119.29.29.29
# > Alibaba Public DNS
# server=223.5.5.5

# 本地 DNS 映射
# Firebase Cloud Messaging
address=/mtalk.google.com/108.177.125.188

;server=8.8.4.4:53
;server=/example0.com/system
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]

[policy]
#
# 需要策略图标的在策略后加上：img-url=http://example.com/icon.png
#

# 静态策略(static) - 手动选择
# 指向您手动选择的候选服务器。
;static=policy-name-1, Sample-A, Sample-B, Sample-C, img-url=http://example.com/icon.png

# 健康策略(available) - 自动选择
# 指向候选服务器的第一个可用服务器(当策略被触发且策略结果不可用时，将立即启动并发 url 延迟测试。如果当时没有网络请求接受策略，这意味着策略处于空闲状态，即使服务器关闭，测试也不会启动。那时，您可以通过手动启动测试来更新服务器状态，但是这没有任何意义)。
;available=policy-name-2, Sample-A, Sample-B, Sample-C

# 负载均衡(round-robin) - 轮询调度
# 指向在候选服务器中指向下一个服务器以进行下一次连接。
;round-robin=policy-name-3, Sample-A, Sample-B, Sample-C

# SSID
# 策略根据网络环境的不同指向服务器。
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C

# resource-tag-regex 及 server-tag-regex 仅适用于 static、available 和 round-robin 类型的策略。
;static=policy-name-5, resource-tag-regex=^sample, server-tag-regex=^example, img-url=http://example.com/icon.png
;available=policy-name-6, resource-tag-regex=^sample, server-tag-regex=^example
;round-robin=policy-name-7, resource-tag-regex=^sample, server-tag-regex=^example

static=Final, proxy, direct, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Final.png
static=Streaming, proxy, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Streaming.png
static=StreamingSE, direct, proxy, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/StreamingSE.png
static=Guard, reject, direct, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Hijacking.png

[server_remote]
#
# 参数「tag」和「enabled」是可选的。
# 各种远程资源的默认同步时间间隔是 86400 秒。
# 你可以设置 update-interval=172800 来自定义你的自动同步时间间隔(秒)，负数表示禁用自动同步。
#
https://cp.v2tun.li/modules/servers/V2raySocks/osubscribe.php?sid=2133&token=YhKIxnlQba4K&sip002=1#emoji=2&out=印度+日本&sort=香港>新加坡>台湾, tag=V2Tun, update-interval=86400, opt-parser=true, enabled=true
https://cm.ilovegfw.gq/link/ZqoTiKuroSSDDUUt?mu=3#emoji=2&out=回國+俄羅斯+俄羅斯+德國+泰國+瑞士+美國+菲律賓+韓國+英國+IPv6+僅限海外+日本&sort=香港>新加坡>台灣, tag=NSL-NET, update-interval=86400, opt-parser=true, enabled=true

[filter_remote]
#
# 参数「tag」、「force-policy」和「enabled」是可选的。
# 当有强制策略时，远程资源的过滤器中的策略将被忽略，并使用强制策略。
#

# Unbreak 后续规则修正
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Unbreak.list, tag=🔂Unbreak, update-interval=86400, enabled=true

# Advertising 广告
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Advertising.list, tag=🛡Advertising, update-interval=86400, force-policy=Guard, enabled=true

# Privacy 隐私
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Privacy.list, tag=🛡️Privacy, update-interval=86400, force-policy=Guard, enabled=false

# Hijacking 运营商劫持或恶意网站
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Hijacking.list, tag=🛡️Hijacking, update-interval=86400, force-policy=Guard, enabled=true

# Streaming 国际流媒体服务
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Streaming.list, tag=🎞Streaming, update-interval=86400, enabled=true

# StreamingSE 中国流媒体服务(面向海外版本)
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/StreamingSE.list, tag=🎞StreamingSE, update-interval=86400, enabled=true

# Global 全球加速
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Global.list, tag=🇺🇳Global, update-interval=86400, enabled=true

# China 中国直连
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/China.list, tag=🇨🇳China, update-interval=86400, enabled=true

# 推荐使用来自 ipipdotnet 的 ChinaIP 以解决数据不准确，以及因规则类型优先级(GEOIP > IP-CIDR)导致的问题，使用 ChinaIP.list 时需禁用「GEOIP,CN」规则
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/ChinaIP.list, tag=🇨🇳ChinaIP(与「geoip, cn, direct」二选一), update-interval=86400, enabled=true

[rewrite_remote]
#
# 参数「tag」和「enabled」是可选的。
#

# General
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/General.conf, tag=🔀General, update-interval=86400, enabled=true

# Block Advertising
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/Advertising.conf, tag=🛡Block Advertising, update-interval=86400, enabled=true

# Block Advertising+
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/AdvertisingPlus.conf, tag=🛡Block Advertising+, update-interval=86400, enabled=true

# Block YouTube Ads
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/YouTubeAds.conf, tag=🛡YouTube Premium 禁用, update-interval=86400, enabled=false

[server_local]
#
# 只有 obfs=http, obfs=ws, obfs=ws, obfs=wss 可以有可选的「obfs-uri」字段。
# wss 中的 obfs-host 参数将用于 TLS 握手和 HTTP 头主机字段，如果没有为 wss 设置 obfs-host，则将使用服务器地址。
# 目前不支持 VMess 和 Trojan 的 UDP relay。
# 当使用 obfs=ws 和 obfs=wss 时，服务器端可以通过带有 mux=0 的 v2ray-plugin 或 v2ray-core 进行部署。
# obfs plugin tls1.2 ticket auth 比 tls1.2 ticket fastauth 和 obfs tls 多一个 RTT，你最好使用 tls1.2 ticket fastauth。
# chacha20-ietf-poly1305 和 chacha20-poly1305 在 VMess 配置中具有相同的效果。
#
# 可选字段 tls13 仅用于：shadowsocks obfs=wss / vmess obfs=over-tls and obfs=wss / http over-tls=true / trojan over-tls=true
# [server_local] 完整示例请查看「示例」

[filter_local]
# Local Area Network 局域网
host-suffix, local, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 224.0.0.0/4, direct
ip6-cidr, fe80::/10, direct

# GeoIP China(若启用，则禁用 ChinaIP.list)
-geoip, cn, direct

final, Final

[rewrite_local]
# [rewrite_local] 完整示例请查看「示例」

# 京东获取Cookie
https:\/\/api\.m\.jd\.com\/client\.action.*functionId=signBean url script-request-header https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js

# 京东价格提醒(By toulanboy)
^https:\/\/apapia-history\.manmanbuy\.com\/ChromeWidgetServices\/WidgetServices\.ashx url script-request-body https://raw.githubusercontent.com/toulanboy/scripts/master/jd_price_detect/jd_price_detect.js

#B ilibili获取Cookie
^https:\/\/(www|live)\.bilibili\.com\/?.? url script-request-header https://raw.githubusercontent.com/chavyleung/scripts/master/bilibili/bilibili.cookie.js

# 中国移动Cookie
^http:\/\/wx.10086.cn\/website\/taskCenter\/index\? url script-request-header https://raw.githubusercontent.com/chavyleung/scripts/master/10086/10086.cookie.js
^http:\/\/wx.10086.cn\/website\/taskCenter\/sign\? url script-request-header https://raw.githubusercontent.com/chavyleung/scripts/master/10086/10086.cookie.js

# 淘宝历史价格
^http://.+/amdc/mobileDispatch url script-request-body https://raw.githubusercontent.com/yichahucha/surge/master/tb_price.js
^https?://trade-acs\.m\.taobao\.com/gw/mtop\.taobao\.detail\.getdetail url script-response-body https://raw.githubusercontent.com/yichahucha/surge/master/tb_price.js

# 京东历史价格
^https?://api\.m\.jd\.com/client\.action\?functionId=(wareBusiness|serverConfig|basicConfig) url script-response-body https://raw.githubusercontent.com/yichahucha/surge/master/jd_price.js

# 去微信公众号广告
^https?:\/\/mp\.weixin\.qq\.com\/mp\/getappmsgad url script-response-body https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/File/Wechat.js

[task_local]
#
# $task.fetch() 组成一个 HTTP 请求并处理响应，只支持 text body。如果您想要 serial requests 而不是 current requests，可以将 $task.fetch() 嵌入到另一个 $task.fetch() 的完成处理程序中。
#
# 脚本应保存在本地「我的 iPhone - Quantumult X - Scripts」或「iCloud Drive - Quantumult X - Scripts」中。示例：https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
#
# 默认的 HTTP 请求超时是 10 秒。
#
# 支持 5 或 6 个 cron 字段，不包括命令字段。
#

# [task_local] 完整示例请查看「示例」
# 京豆签到
# 浏览器登录 https://bean.m.jd.com 点击签到并且出现签到日历
5,10 0 * * * https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js, tag=京东, img-url=https://raw.githubusercontent.com/Orz-3/task/master/jd.png,enabled=true

# 京东农场 (By liuxiaoyucc、lxk0301 & iepngs)
# 京东App - 右下角"我的"- 游戏与互动-东东农场
;5 6-18/6 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_fruit.js, tag=京东农场, img-url=https://raw.githubusercontent.com/znz1992/Gallery/master/jdsg.png, enabled=true

# 京东萌宠 (By liuxiaoyucc、lxk0301 & iepngs)
# 京东App - 右下角"我的"- 游戏与互动-东东萌宠
;10 7-19/6 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_pet.js, tag=京东萌宠, img-url=https://raw.githubusercontent.com/znz1992/Gallery/master/jdmc.png, enabled=true

# 京东宠汪汪 (By uniqueque、lxk0301 & iepngs)
# 京东App - 右下角"我的"- 游戏与互动-宠汪汪
# 建议先凌晨0点运行jd_joy.js脚本获取狗粮后，再运行此脚本(jd_joy_steal.js)可偷好友积分，6点运行可偷好友狗粮
# feedCount:自定义 每次喂养数量; 等级只和喂养次数有关，与数量无关
# 推荐每次投喂10个，积累狗粮，然后去聚宝盆赌每小时的幸运奖，据观察，投入3000-6000中奖概率大，超过7000基本上注定亏本，即使是第一名
;15 */2 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_joy.js, tag=京东宠汪汪, img-url=https://raw.githubusercontent.com/znz1992/Gallery/master/jdww.png, enabled=true

# 宠汪汪积分兑换奖品
;1 0,8,12,16 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_joy_reward.js, tag=宠汪汪积分兑换奖品, img-url=https://raw.githubusercontent.com/znz1992/Gallery/master/jdww.png, enabled=true

# 宠汪汪喂食
;0 0 */2 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_joy_feedPets.js, tag=宠汪汪喂食, img-url=https://raw.githubusercontent.com/znz1992/Gallery/master/jdww.png, enabled=true

# 宠汪汪偷好友积分与狗粮
;0 0,6 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_joy_steal.js, tag=宠汪汪偷好友积分与狗粮, img-url=https://raw.githubusercontent.com/znz1992/Gallery/master/jdww.png, enabled=true

# 京东种豆得豆 (By uniqueque、lxk0301 & iepngs)
1 7-21/2 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_plantBean.js, tag=种豆得豆, img-url=https://raw.githubusercontent.com/znz1992/Gallery/master/jdzd.png, enabled=true

# 京东摇钱树 (By lxk0301)
# 京东App - 右下角"我的"- 游戏与互动-摇钱树
;10 */3 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_moneyTree.js, tag=京东摇钱树, img-url=https://raw.githubusercontent.com/znz1992/Gallery/master/moneyTree.png, enabled=true

# 京东天天加速 (By lxk0301)
# 京东App - 右下角"我的"- 游戏与互动-天天加速
;8 */3 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_speed.js, tag=京东天天加速, img-url=https://raw.githubusercontent.com/znz1992/Gallery/master/jdttjs.png, enabled=true

# 京东进店领豆
;10 0 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_shop.js, tag=进店领豆, img-url=https://raw.githubusercontent.com/58xinian/icon/master/jd_shop.png, enabled=true

# 取关京东店铺商品 (By lxk0301)
# 因种豆得豆和宠汪汪以及NobyDa大佬的京东签到脚本会关注店铺和商品，故此脚本用来取消已关注的店铺和商品
# 默认每运行一次脚本取消关注10个商品，10个店铺。可结合boxjs自定义取消多少个（目前测试通过最大数量是一次性取消300个商品无异常，大于300请自行测试，建议尽量不要一次性全部取消以免出现问题）。
# 建议此脚本运行时间在 种豆得豆和宠汪汪脚本运行之后 再执行。
55 23 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_unsubscribe.js, tag=取关京东店铺商品, img-url=https://raw.githubusercontent.com/Orz-3/task/master/jd.png, enabled=true

# 京小超(By lxk0301)
# 京东App - 右下角"我的"- 游戏与互动-京小超
;11 1-23/2 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_superMarket.js, tag=京小超, img-url=https://raw.githubusercontent.com/58xinian/icon/master/jxc.png, enabled=true

# 京小超领蓝币(收小费)(By lxk0301)
# 运行脚本一次收取今天所有的蓝币(耗时会比较久)
# 每天收小费(蓝币)上限是1千个
;1 0 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_blueCoin.js, tag=京小超领蓝币(收小费), img-url=https://raw.githubusercontent.com/58xinian/icon/master/jxc.png, enabled=true

# 摇京豆
;5 0 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_club_lottery.js, tag=摇京豆

# 宠汪汪邀请助力与赛跑助力
;15 10 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_joy_run.js, tag=宠汪汪邀请助力与赛跑助力

# 京东抽奖机
;11 0 * * * https://raw.githubusercontent.com/yangtingxiao/QuantumultX/master/scripts/jd/jd_lotteryMachine.js,tag=京东抽奖机

# 京东排行榜
;11 9 * * * https://raw.githubusercontent.com/yangtingxiao/QuantumultX/master/scripts/jd/jd_rankingList.js,tag=京东排行榜

# 京东白条
;0 9 * * * https://raw.githubusercontent.com/yangtingxiao/QuantumultX/master/scripts/jd/jd_baiTiao.js, tag=京东白条

# 京东金融天天提鹅游戏
# 在京东金融app内搜索摇钱树即可进入小游戏页面，然会选择提鹅小游戏,先参加一下这个活动，这是前提
# 在浏览直接访问https://jdde.jd.com/btyingxiao/marketing/html/index.html? 登录京东账户即可获取cookie
;10 10 8 * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_daily_egg.js, tag=京东金融提鹅

# 京东金融养猪游戏
;12 * * * * https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_pigPet.js, tag=金融养猪

# 京东特权值
;5 8 * * * https://raw.githubusercontent.com/iisams/Scripts/master/liwo/jdtqz.js, tag= 京东特权值

# bilibili 签到
# 打开浏览器访问: https://www.bilibili.com 或 https://live.bilibili.com
# 2 0 * * * https://raw.githubusercontent.com/chavyleung/scripts/master/bilibili/bilibili.js, tag=bilibili, img-url=https://raw.githubusercontent.com/Orz-3/task/master/bilibili.png,enabled=true

# 银瓜子转硬币
;2 0 * * * https://raw.githubusercontent.com/chavyleung/scripts/master/bilibili/bilibili.silver2coin.js, tag=bilibili银瓜子转硬币, img-url=https://raw.githubusercontent.com/Orz-3/task/master/bilibili.png,enabled=true

# 中国移动
# 打开 APP , 进入签到页面, 系统提示: `获取刷新链接: 成功`,然后手动签到 1 次
;9 0 * * * https://raw.githubusercontent.com/chavyleung/scripts/master/10086/10086.js, tag=中国移动, img-url=https://raw.githubusercontent.com/Orz-3/task/master/10086.png,enabled=true

[http_backend]
#
# 部署一个本地 HTTP 服务器，并使用 JavaScript 进行数据处理。
# 输入变量为：$reqeust.url、$reqeust.path、$reqeust.headers、$reqeust.body。
# 使用 $done 输出像 $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") 这样的返回响应。
# 此外，您还可以使用签名或任何其他验证方法来验证请求是否合法。
# 部署后您应该通过 http://127.0.0.1:9999/your-path/your-api/. 进行访问。服务器默认监听端口为 9999，您可以在UI中进行更改。
#
# [http_backend] 完整示例请查看「示例」

# BoxJs
https://gitee.com/chavyleung/scripts/raw/master/box/chavy.boxjs.js, tag=BoxJs.net, path=^/, enabled=false

[mitm]
#
# 只有「hostname」中的 TLS SNI 或目标地址将被 MitM 处理。
#
# 默认情况下，当为 HTTPS 请求启用 MitM 时，Quantumult X 会从原站点获取证书（证书会被缓存），保留大部分需要的原始证书信息，并使用 MitM 的 root CA 重新签名，这是推荐的（也是比较兼容的）MitM 证书创建方式。
#
# 偶尔有些用户喜欢调试 HTTPS 请求，其域名不存在，所以原证书根本不存在。当参数 simple_cert_hostname 出现的时候。其 TLS SNI 名称在 simple_cert_hostname(及 hostname) 中的 HTTPS 请求将使用纯本地生成的 MitM 证书。
#
# 注意！！！您应该始终保护您的 CA 密码和 p12 的私密性。
#
skip_validating_cert = true
;force_sni_domain_name = false
;simple_cert_hostname = non-existed-domain.com, *.non-connected-domain.com
hostname = api.m.jd.com, *.bilibili.com, trade-acs.m.taobao.com, mp.weixin.qq.com, ms.jr.jd.com, wx.10086.cn
passphrase = B3098D95
p12 = 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